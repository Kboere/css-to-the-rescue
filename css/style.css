*, *::before, *::after {
    padding: 0;
    margin: 0 auto;
    box-sizing: border-box;
}

:root {
    --perspective: 1250px;

    --camera-truck: 0px;
    --camera-pedestal: 0px;
    --camera-dolly: -1000px;
    --camera-roll: 0deg;
    --camera-pan: 0deg;
    --camera-tilt: 0deg;
  
    --hue: 223;
    --hue-center: 18;
    --hue-off: 3;
    --hue-on: 133;
    --bg: hsl(var(--hue), 90%, 85%);
    --fg: hsl(var(--hue), 90%, 10%);
    --trans-dur: 0.3s;
    --trans-timing: cubic-bezier(0.65, 0, 0.35, 1);
}

body {
  font-family: sans-serif;
  background-color: #000;
  color: #fff;
  min-height: 100vh;
  display: grid;
  place-items: center;
  perspective: var(--perspective);
  
  *:not(:empty) {
    transform-style: preserve-3d;
  }
}

/*-------------------------*/
/* Switch button (party-mode) */
/*-------------------------*/
  .switch {
    --licked: 0;
    --opacity: calc(1 - var(--licked)* 0.6);
    --scale: calc(1 - var(--licked)* 0.4);
    --scale-y: calc(1 - var(--licked)* 0.2);
    --shadow-n: calc(-0.0625em*(1 - var(--licked)));
    --shadow-p: calc(0.0625em*(1 - var(--licked)));
    position: absolute;
	left: 0;
	top: 0;
    display: block;
    width: fit-content;
    z-index: 99999;
}
  .switch__input {
    cursor: pointer;
    display: block;
    outline: transparent;
    position: relative;
    width: 75px;
    height: 150px;
    transition: background-color var(--trans-dur), box-shadow calc(var(--trans-dur) / 2);
    -webkit-appearance: none;
    appearance: none;
}
  .switch__input:before, .switch__input:after {
    transition: box-shadow var(--trans-dur) var(--trans-timing), transform var(--trans-dur) var(--trans-timing);
  }
  .switch__input:before {
    background-color: hsl(var(--hue), 10%, 90%);
    border-radius: 0.0625em;
    box-shadow: -0.0625em 0 0 white inset, 0 0 0 hsl(var(--hue), 10%, 80%) inset;
    top: 50%;
    left: 0;
    width: calc(100% - 5px);
    height: 10px;
    transform: translateX(0%) rotate(-25deg);
    transform-origin: 0% 0;
}
  .switch__input:after {
    background-color: hsl(var(--hue-center), 70%, 30%);
    border-radius: 50%;
    box-shadow: 0.0625em -0.0625em 0 hsl(var(--hue-center), 70%, 20%) inset, 0 0 0 0.125em hsl(var(--hue-center), 70%, 30%) inset, -0.1875em 0.1875em 0 hsl(var(--hue-center), 70%, 40%) inset;
    top: 2.7em;
    right: 0;
    width: 30px;
    height: 30px;
}
  .switch__input:checked:before {
    transform: rotate(25deg) translateX(4px);
}
  .switch__input:checked:after {
    transform: translateY(4.3em);
}
  .switch__input:focus-visible {
    box-shadow: 0 0 0 0.0625em hsl(var(--hue), 90%, 70%) inset, 0 0 0.125em 0.125em hsl(var(--hue), 90%, 50%);
  }
  .switch__input:before, 
  .switch__input:after {
    content: "";
    display: block;
    position: absolute;
  }
  .switch__label {
    overflow: hidden;
    position: absolute;
    width: 1px;
    height: 1px;
  }

  label:has(input:checked) ~ div:nth-of-type(1) > div {
	/* background-color: dodgerblue; */
	/* background-color: darkred;
    background-image: radial-gradient(circle, #ff0000, #ff8000, #ffff00, #00ff00, #0000ff, #8000ff, #ff00ff);
    background-size: 600% 600%; */
    animation: rainbow 2s ease infinite; 
  }

  @keyframes rainbow {
    0% { background-color: red; }
    20% { background-color: orange; }
    40% { background-color: yellow; }
    60% { background-color: green; }
    80% { background-color: blue; }
    100% { background-color: violet; }
  }


/*-------------------------*/
/* buttons viewmodes */
/*-------------------------*/

body > button:nth-of-type(1){
  right: 100px;
}
body > button:nth-of-type(2){
  right: 50px;
}

body > button:nth-of-type(1):active ~ div:nth-of-type(1) {
    --camera-dolly: -70px;
    /* --camera-pedestal: 80px; */
    --camera-truck: -910px;
    --camera-pan: 83deg;
	--camera-tilt: 0deg;
    --camera-roll: 2deg;
  }

body > button:nth-of-type(2):active ~ div:nth-of-type(1) {
    --camera-dolly: -580px;
    --camera-pedestal: 500px;
    --camera-tilt: 0deg;
    --camera-roll: -40deg;
  }

body > button:nth-of-type(3):active ~ div:nth-of-type(1) {
    --camera-dolly: -70px;
    --camera-truck: 910px;
    --camera-pan: -90deg;
    --camera-tilt: 0deg;
    --camera-roll: 2deg;
  }

body > button {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 99999;
}

body > div:nth-of-type(1) {
  position: relative;
  transition: transform 1s;
  transform:
    translateZ(var(--perspective))
    
    rotateX(var(--camera-roll))
    rotateY(var(--camera-pan))
    rotateZ(var(--camera-tilt))
    
    translateX(calc(var(--camera-truck) * -1))
    translateY(var(--camera-pedestal))
    translateZ(var(--camera-dolly))
    ;
}

div:nth-of-type(1) > div {
  position: absolute;
  top: 50%; left: 50%;
  width: 1600px; height: 1600px;
  transform: translate(-50%, -50%) rotateX(90deg) translateZ(-180px);
  background-color: darkred;
  background-image:
    radial-gradient(#000a, #0000, #000 60%),
    repeating-linear-gradient(#fff5 0 2px, #fff0 0 30px),
    repeating-linear-gradient(90deg, #fff5 0 2px, #fff0 0 30px)
    ;
}

/*  the box */
article {
	--size-article: 10em;
	--size-output: 2em;

	/* max distance to the left or to the top */
	--distance-max: calc(var(--size-article) - var(--size-output));

	width: var(--size-article);
	aspect-ratio: 1;
	/* background-color:blue; */

	/* output starts at left bottom */
	display: grid;
	place-items: start start;
	transform-style: preserve-3d;
}

div:nth-of-type(1) article div:nth-of-type(-n+5) {
    position: absolute;
    width: var(--size-article);
    height: var(--size-article);
    left: 0;
    background-color: rgba(255, 255, 255, 0.07);
    border: 8px solid dodgerblue;

	--translate-box: 5em;
}

div:nth-of-type(1) article div[data-full-screen="front"] {
	transform: translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-full-screen="back"] {
	transform: rotateY(180deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-full-screen="right"] {
	transform: rotateY(90deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-full-screen="left"] {
	transform: rotateY(-90deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-full-screen="top"] {
    transform: rotateX(90deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article div:nth-of-type(n+6) {
    position: absolute;
    width: calc(var(--size-article) - 12px);
    height: calc(var(--size-article) / 3 - 6px);
    background-color: rgba(255, 255, 255, 0.1);
     bottom: 6px;
    left: 6px; 
	--translate-box: 5em;
}

div:nth-of-type(1) article div[data-half-screen="front"] {
	transform: translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-half-screen="back"] {
	transform: rotateY(180deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-half-screen="right"] {
	transform: rotateY(90deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article div[data-half-screen="left"] {
	transform: rotateY(-90deg) translateZ(var(--translate-box));
}

/* grabmachine bottom part */
div:nth-of-type(1) article:nth-of-type(2) div {
    position: absolute;
    width: var(--size-article);
    height: var(--size-article);
    left: 0;
    background-color: dodgerblue;

	--translate-box: 5em;
}

div:nth-of-type(1) article:nth-of-type(2) div[data-full-screen="front"] {
	transform: translateZ(var(--translate-box));
}

div:nth-of-type(1) article:nth-of-type(2) div[data-full-screen="back"] {
	transform: rotateY(180deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article:nth-of-type(2) div[data-full-screen="right"] {
	transform: rotateY(90deg) translateZ(var(--translate-box));
}

div:nth-of-type(1) article:nth-of-type(2) div[data-full-screen="left"] {
	transform: rotateY(-90deg) translateZ(var(--translate-box));
}

/* output */
@property --up {
	syntax: "<number>";
	inherits: true;
	initial-value: 0;
}

@property --left {
	syntax: "<number>";
	inherits: true;
	initial-value: 0;
}

@property --right {
	syntax: "<number>";
	inherits: true;
	initial-value: 0;
}

@property --down {
	syntax: "<number>";
	inherits: true;
	initial-value: 0;
}

/* all values start at 0 */
@keyframes up {
	to {
		/* --up:5; */
		transform: translateZ(-5em);
	}
}

@keyframes left {
	to {
		--left: 1;
	}
}

@keyframes right {
	to {
		--right: 1;
	}
}

@keyframes down {
	to {
		/* -down:5; */
		transform: translateZ(5em);
	}
}

output {
	display: block;
	width: var(--size-output);
  left: 0;
  position: absolute;
	aspect-ratio: 1;
	background-color: #f09;

	/* // animations control the value of the custom properties
	// start at 0
	// each animation is changed from paused to running with :has in the interaction section */
	animation:
		up 5s linear both paused,
		left 10s linear both paused,
		right 10s linear both paused,
		down 5s linear both paused;

	/* add clamp to keep the output in the article */
	translate: 
		clamp(
			0em, 
			calc((var(--distance-max)) * (var(--right) - var(--left))), 
			var(--distance-max)
		)

	 	clamp(
			0em, 
			calc((var(--distance-max)) * (var(--down) - var(--up))), 
			var(--distance-max)
		)
	;
}

/* interaction */

/* change up animation form paused to running */
section:nth-of-type(1):has(button:nth-of-type(1):active) ~ div:nth-of-type(1) article output{
	animation-play-state: running, paused, paused, paused;
}

section:nth-of-type(1):has(button:nth-of-type(2):active) ~ div:nth-of-type(1) article output {
	animation-play-state: paused, running, paused, paused; 
}

section:nth-of-type(1):has(button:nth-of-type(3):active) ~ div:nth-of-type(1) article output {
	animation-play-state: paused, paused, running, paused;
}

section:nth-of-type(1):has(button:nth-of-type(4):active) ~ div:nth-of-type(1) article output {
	animation-play-state: paused, paused, paused, running;
}

section:nth-of-type(1) {
    position: fixed;
    display: flex;
    background-color: #1e90ff;
	/* clip-path: polygon(20% 0%, 80% 0%, 100% 100%, 0% 100%); */
    padding: 20px;
    left: 50%;
    transform: translateX(-50%);
    bottom: 0;
    z-index: 99999;
}


section:nth-of-type(1)::before,
section:nth-of-type(1)::after {
    content: "";
    position: absolute;
    width: 2em;
    height: 100%;
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
    background-color: #4188CE;
}
section:nth-of-type(1)::before {
    left: -0.98em;
    top: 0;
}
section:nth-of-type(1)::after {
    right: -0.98em;
    top: 0;
	transform: scaleX(-1);
}

section:nth-of-type(1) div {
    display: flex;
    transition: 0.1s;
    transform-style: unset;
    flex-direction: row;
    align-content: center;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    top: -0.2em;
    position: relative;
}

section:nth-of-type(1) div button {
    color: #fff;
    background: #D3E1FF;
    border: none;
    position: relative;
    cursor: pointer;
    border-radius: 5em;
    width: 5em;
    height: 5em;
    transform-style: unset;
    margin-right: 0.5em;
    font-size: 1em;
	color: #000;
	transition: .3s;
}
section:nth-of-type(1) div button:after {
	content: "";
	position: absolute;
	width: 5em;
    height: 5em;
	bottom: -0.6em;
	background: #A4B5E3;
	border-radius: 5em;
	left: 0;
	z-index: -1;
	transition: .3s;
}

section:nth-of-type(1) div button:last-child{
	background: #FFBFBF;
}
section:nth-of-type(1) div button:last-child:after {
	background: #D06464;
}

section:nth-of-type(1) div button:active{
	box-shadow:inset .2em .2em .2em #0009;
	transition: .3s;
}

section:nth-of-type(1) div button:active:after {
	bottom: 0em;
}